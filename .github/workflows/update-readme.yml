name: Auto Update README

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  update-readme:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # 获取完整的git历史

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Update README with latest info
      run: |
        # 为每个项目文件夹获取最后修改时间并更新
        echo "🔄 开始更新项目时间戳..."
        
        # 获取所有项目文件夹
        for dir in */; do
          if [[ "$dir" != ".github/" && "$dir" != "node_modules/" ]]; then
            project_name=$(basename "$dir" "/")
            echo "📁 处理项目: $project_name"
            
            # 获取该项目文件夹的最后修改时间
            project_date=$(git log -1 --date=format:'%Y-%m' --pretty=format:'%cd' -- "$dir" 2>/dev/null || date +'%Y-%m')
            echo "  📅 最后更新时间: $project_date"
            
            # 检查项目状态
            project_status="✅ 完成"
            if [[ -f "$dir/rs.txt" ]]; then
              project_status="✅ 已部署"
            elif [[ -f "$dir"*.py || -f "$dir"*.sol ]]; then
              project_status="✅ 完成"
            fi
            
            # 使用更精确的sed命令更新对应项目行
            # 匹配包含项目名称的行，更新时间和状态
            if grep -q "$project_name" README.md; then
              # 更新时间 - 匹配项目名称所在的行
              sed -i "s/\(.*$project_name.*\) [0-9]\{4\}-[0-9]\{2\} |/\1 $project_date |/" README.md
              echo "  ✅ 已更新 $project_name 的时间戳为 $project_date"
            fi
          fi
        done
        
        # 检查是否有改动
        if git diff --quiet README.md; then
          echo "ℹ️  README.md 无需更新"
          exit 0
        else
          echo "✅ README.md 已更新"
          git diff README.md
        fi

    - name: Commit changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add README.md
        git diff --staged --quiet || git commit -m "🤖 Auto-update README timestamps"
        
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref }}